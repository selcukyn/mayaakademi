---
// src/pages/blog/[slug].astro (NİHAİ ÇALIŞAN KOD)

import Layout from "../../layouts/Layout.astro";
import { client as sanityClient } from '../../lib/sanityClient';
import { urlFor } from '../../lib/sanityImageUrl';
import { Image } from "astro:assets";
import { PortableText } from 'astro-portabletext'; // astro-portabletext paketi
import { formatDate } from "../../utils/formatDate";

import type {
  SanityPost,
  SanityPostSlug,
  PortableTextTypeComponentProps, // Sadece image ve link için gerekli tipler
  PortableTextMarkComponentProps
} from '../../types/sanity';
import type { SanityImageSource } from '../../types/sanity';


export function getStaticPaths() { // async YOK, .then() kullanılıyor
  const query = `*[_type == "post" && defined(slug.current) && !(_id in path("drafts.**"))]{ "slug": slug.current }`;
  // console.log("Fetching slugs from Sanity using .then()..."); // Logları temizleyebiliriz

  return sanityClient.fetch<SanityPostSlug[]>(query)
    .then(postsFromSanity => {
      // console.log(".then() - Slugs fetched:", postsFromSanity);
      if (!postsFromSanity || postsFromSanity.length === 0) {
         return [];
      }
      return postsFromSanity.map((post: SanityPostSlug) => {
        if (!post || !post.slug) { return null; }
        return { params: { slug: post.slug }, props: { slug: post.slug } };
      }).filter(Boolean);
    })
    .catch(error => {
      console.error(".then() - Error fetching slugs:", error); return [];
    });
}

interface Props { slug: string; }
const { slug } = Astro.props as Props;

const postQuery = `*[_type == "post" && slug.current == $slug][0]{
  _id, title, "slugValue": slug.current, mainImage,
  author->{ name }, publishedAt, body, excerpt
}`;

// console.log(`Fetching post details for slug: ${slug}`); // Logları temizleyebiliriz
const post = await sanityClient.fetch<SanityPost | null>(postQuery, { slug }); // TOP-LEVEL AWAIT

if (!post) {
  return Astro.redirect('/404');
}

const pageTitle = post.title || "Blog Yazısı";
const metaDescription = post.excerpt || (post.title ? post.title.slice(0, 160) : "Detaylı bilgi için tıklayın.");
let ogImageUrl: string | undefined = undefined;
let mainImageForPage: { src: string; alt: string; width: number; height: number } | null = null;

if (post.mainImage && post.mainImage.asset) {
  const imgBuilder = urlFor(post.mainImage);
  if (imgBuilder) {
    ogImageUrl = imgBuilder.width(1200).height(630).fit('crop').auto('format').url();
    mainImageForPage = {
      src: imgBuilder.width(1000).height(550).auto('format').url(),
      alt: post.mainImage.alt || pageTitle,
      width: 1000, height: 550
    };
  }
}

// --- customPortableTextComponents Tanımı (SADECE types.image ve marks.link) ---
// block, list, listItem tanımları KALDIRILDI. Varsayılan render kullanılacak.
const customPortableTextComponents: Partial<any> = {
  types: {
    // Image için string HTML döndürmek çalışmıştı
    image: ({ value }: PortableTextTypeComponentProps) => {
      if (!value || !value.asset) return '';
      const imgBuilderType = urlFor(value.asset as SanityImageSource);
      if (!imgBuilderType) return '';
      const imageUrl = imgBuilderType.width(800).auto('format').url();
      const altText = value.alt || 'İçerik görseli';
      // Temanızın class'larını ekleyebiliriz
      return `<img src="${imageUrl}" alt="${altText}" class="my-6 rounded-[5px] shadow-md" />`; // wow fadeInUp kaldırıldı, JS ile eklenmeli veya CSS ile yapılmalı
    },
  },
  marks: {
    // Link için string HTML döndürmek çalışmıştı
    link: ({ children, value }: PortableTextMarkComponentProps) => {
      const href = value?.href;
      // children'ı güvenli bir şekilde string'e çeviriyoruz
      const childrenText = Array.isArray(children)
        ? children.map(child => (typeof child === 'string' ? child : (child as any)?.text || '')).join('')
        : String(children || '');
      if (!href) return childrenText;
      const rel = href.startsWith('/') ? '' : 'noopener noreferrer';
      const target = href.startsWith('/') ? '' : '_blank';
      return `<a href="${href}" ${rel ? `rel="${rel}"` : ''} ${target ? `target="${target}"` : ''} class="text-primary hover:underline">${childrenText}</a>`;
    },
  }
};
// --- customPortableTextComponents Tanımı SONU ---

---

<Layout title={pageTitle} description={metaDescription} image={ogImageUrl} type="article">
  <section class="pt-20 pb-10 lg:pt-[120px] lg:pb-20 dark:bg-dark">
    <div class="container">
      <div class="-mx-4 flex flex-wrap justify-center">
        <div class="w-full px-4 lg:w-8/12">
          {/* Ana Görsel */}
          <div class="wow fadeInUp relative z-20 mb-[50px] h-[300px] overflow-hidden rounded-[5px] md:h-[400px] lg:h-[500px]" data-wow-delay=".1s">
            {mainImageForPage ? (
              <Image
                src={mainImageForPage.src}
                alt={mainImageForPage.alt}
                width={mainImageForPage.width}
                height={mainImageForPage.height}
                class="h-full w-full object-cover object-center"
              />
            ) : (
              <div class="flex h-full w-full items-center justify-center bg-gray-200 dark:bg-gray-700 rounded-[5px]">
                <span class="text-gray-500">Ana Görsel Yok</span>
              </div>
            )}
            {/* Görsel Üstü Bilgi */}
            <div class="absolute top-0 left-0 z-10 flex h-full w-full items-end bg-gradient-to-t from-black/70 via-black/30 to-transparent">
              <div class="w-full p-4 pb-4 sm:px-8">
                <div class="flex flex-wrap items-center justify-between">
                    {post.author?.name && (
                      <div class="mb-4 flex items-center">
                        <p class="text-base font-medium text-white">
                          <a href="#" class="text-white hover:opacity-70">
                            {post.author.name}
                          </a>
                        </p>
                      </div>
                    )}
                    <div class="mb-4 flex items-center">
                      <p class="mr-5 flex items-center text-sm font-medium text-white">
                        <span class="mr-3">
                          <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="fill-current"><path d="M13.9998 2.6499H12.6998V2.0999C12.6998 1.7999 12.4498 1.5249 12.1248 1.5249C11.7998 1.5249 11.5498 1.7749 11.5498 2.0999V2.6499H4.4248V2.0999C4.4248 1.7999 4.1748 1.5249 3.8498 1.5249C3.5248 1.5249 3.2748 1.7749 3.2748 2.0999V2.6499H1.9998C1.1498 2.6499 0.424805 3.3499 0.424805 4.2249V12.9249C0.424805 13.7749 1.1248 14.4999 1.9998 14.4999H13.9998C14.8498 14.4999 15.5748 13.7999 15.5748 12.9249V4.1999C15.5748 3.3499 14.8498 2.6499 13.9998 2.6499ZM1.5748 7.2999H3.6998V9.7749H1.5748V7.2999ZM4.8248 7.2999H7.4498V9.7749H4.8248V7.2999ZM7.4498 10.8999V13.3499H4.8248V10.8999H7.4498V10.8999ZM8.5748 10.8999H11.1998V13.3499H8.5748V10.8999ZM8.5748 9.7749V7.2999H11.1998V9.7749H8.5748ZM12.2998 7.2999H14.4248V9.7749H12.2998V7.2999ZM1.9998 3.7749H3.2998V4.2999C3.2998 4.5999 3.5498 4.8749 3.8748 4.8749C4.1998 4.8749 4.4498 4.6249 4.4498 4.2999V3.7749H11.5998V4.2999C11.5998 4.5999 11.8498 4.8749 12.1748 4.8749C12.4998 4.8749 12.7498 4.6249 12.7498 4.2999V3.7749H13.9998C14.2498 3.7749 14.4498 3.9749 14.4498 4.2249V6.1749H1.5748V4.2249C1.5748 3.9749 1.7498 3.7749 1.9998 3.7749ZM1.5748 12.8999V10.8749H3.6998V13.3249H1.9998C1.7498 13.3499 1.5748 13.1499 1.5748 12.8999ZM13.9998 13.3499H12.2998V10.8999H14.4248V12.9249C14.4498 13.1499 14.2498 13.3499 13.9998 13.3499Z" /></svg>
                        </span>
                        {post.publishedAt ? formatDate(post.publishedAt) : 'Tarih Belirtilmemiş'}
                      </p>
                    </div>
                </div>
              </div>
            </div>
          </div>

          {/* Yazı Başlığı */}
          <h1 class="wow fadeInUp mb-8 text-2xl font-bold text-dark dark:text-white sm:text-3xl md:text-[35px] md:leading-[1.28]" data-wow-delay=".1s">
            {post.title}
          </h1>

          {/* İçerik Alanı */}
          <div class="-mx-4 flex flex-wrap">
            <div class="w-full px-4">
              {/* Tailwind Typography class'ları ile varsayılan stilleri sağlıyoruz */}
              <div class="prose dark:prose-invert prose-lg max-w-none mx-auto
                          prose-headings:font-semibold prose-headings:text-dark prose-headings:dark:text-white
                          prose-p:text-body-color prose-p:dark:text-dark-6
                          prose-a:text-primary prose-a:hover:underline
                          prose-strong:text-dark prose-strong:dark:text-white
                          prose-blockquote:border-primary prose-blockquote:text-dark prose-blockquote:dark:text-white">
                {/* PortableText bileşenini, SADECE image ve link için custom component'lerle çağırıyoruz */}
                {post.body && post.body.length > 0 && <PortableText value={post.body} components={customPortableTextComponents} />}
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>
</Layout>