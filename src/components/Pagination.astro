---
// src/components/Pagination.astro (range fonksiyonunu kullanan ve query parametreli)
import { range } from "../utils/range"; // <-- Bu dosya artık var

export interface Props {
  currentPage: number;
  totalPages: number;
  basePath: string; // "/blog" olarak gelecek
}

const { currentPage, totalPages, basePath } = Astro.props;

// Sayfa numarası dizisini oluştur
const pageNumbersToDisplay = range(1, totalPages);

// Çok fazla sayfa varsa gösterilecek sayfa aralığını sınırlama mantığı (Opsiyonel)
const maxPagesToShow = 5;
let startPage: number, endPage: number;
if (totalPages <= maxPagesToShow) {
  startPage = 1;
  endPage = totalPages;
} else {
  const maxPagesBeforeCurrent = Math.floor((maxPagesToShow - 1) / 2);
  const maxPagesAfterCurrent = Math.ceil((maxPagesToShow - 1) / 2);
  if (currentPage <= maxPagesBeforeCurrent) {
    startPage = 1;
    endPage = maxPagesToShow;
  } else if (currentPage + maxPagesAfterCurrent >= totalPages) {
    startPage = totalPages - maxPagesToShow + 1;
    endPage = totalPages;
  } else {
    startPage = currentPage - maxPagesBeforeCurrent;
    endPage = currentPage + maxPagesAfterCurrent;
  }
}
const limitedPageNumbers = range(startPage, endPage);

const hasPrev = currentPage > 1;
const hasNext = currentPage < totalPages;
---

{
  totalPages > 1 && (
    <nav class="mt-12" aria-label="Sayfalama">
      <ul class="inline-flex items-center -space-x-px">
        {/* Önceki Sayfa Linki */}
        <li>
          <a
            href={hasPrev ? `${basePath}${currentPage - 1 === 1 ? '' : `?page=${currentPage - 1}`}` : "#"}
            class:list={[
              "ml-0 rounded-l-lg border border-gray-300 bg-white px-3 py-2 leading-tight text-gray-500 hover:bg-gray-100 hover:text-gray-700 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white",
              { "pointer-events-none opacity-50": !hasPrev },
            ]}
            aria-disabled={!hasPrev ? "true" : "false"}
            aria-label="Önceki Sayfa"
          >
            <span class="sr-only">Önceki</span>
            <svg class="h-3 w-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10"> <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 1 1 5l4 4"/> </svg>
          </a>
        </li>
        {/* ... Kısaltma Mantığı (Opsiyonel): Eğer ilk sayfa gösterilen aralıkta değilse "1 ..." ekle */}
        { startPage > 1 && (
          <>
            <li>
              <a href={`${basePath}`} class="border border-gray-300 bg-white px-3 py-2 leading-tight text-gray-500 hover:bg-gray-100 hover:text-gray-700 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white">1</a>
            </li>
            { startPage > 2 && (
              <li>
                <span class="border border-gray-300 bg-white px-3 py-2 leading-tight text-gray-500 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-400">...</span>
              </li>
            )}
          </>
        )}
        {/* Gösterilecek Sayfa Numarası Linkleri */}
        {limitedPageNumbers.map((page) => (
          <li>
            <a
              href={`${basePath}${page === 1 ? '' : `?page=${page}`}`}
              class:list={[
                "border border-gray-300 bg-white px-3 py-2 leading-tight text-gray-500 hover:bg-gray-100 hover:text-gray-700 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white",
                {
                  "bg-primary-50 text-primary-600 hover:bg-primary-100 hover:text-primary-700 dark:border-gray-700 dark:bg-gray-700 dark:text-white":
                    currentPage === page,
                },
              ]}
              aria-current={currentPage === page ? "page" : undefined}
            >
              {page}
            </a>
          </li>
        ))}
        {/* ... Kısaltma Mantığı (Opsiyonel): Eğer son sayfa gösterilen aralıkta değilse "... N" ekle */}
        { endPage < totalPages && (
          <>
            { endPage < totalPages - 1 && (
              <li>
                <span class="border border-gray-300 bg-white px-3 py-2 leading-tight text-gray-500 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-400">...</span>
              </li>
            )}
            <li>
              <a href={`${basePath}?page=${totalPages}`} class="border border-gray-300 bg-white px-3 py-2 leading-tight text-gray-500 hover:bg-gray-100 hover:text-gray-700 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white">{totalPages}</a>
            </li>
          </>
        )}
        {/* Sonraki Sayfa Linki */}
        <li>
          <a
            href={hasNext ? `${basePath}?page=${currentPage + 1}` : "#"}
            class:list={[
              "rounded-r-lg border border-gray-300 bg-white px-3 py-2 leading-tight text-gray-500 hover:bg-gray-100 hover:text-gray-700 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white",
              { "pointer-events-none opacity-50": !hasNext },
            ]}
            aria-disabled={!hasNext ? "true" : "false"}
            aria-label="Sonraki Sayfa"
          >
            <span class="sr-only">Sonraki</span>
            <svg class="h-3 w-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10"> <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 9 4-4-4-4"/> </svg>
          </a>
        </li>
      </ul>
    </nav>
  )
}